/*クライアントプログラム(TCP通信におけるクライアント側プログラムを作成)*/
#include <stdio.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <netdb.h>
#define BUFFER_SIZE 256
int main(){
  /* ポート番号、ソケット */
  unsigned short port = 9876;
  int srcSocket;  // 自分
  int dstSocket;  // 相手
  /* sockaddr_in 構造体 */
  struct sockaddr_in srcAddr;
  struct sockaddr_in dstAddr;
  int dstAddrSize = sizeof(dstAddr);
  /* 各種パラメータ */
  int numrcv;
  char buffer[BUFFER_SIZE];
  /* sockaddr_in 構造体のセット */
  memset(&srcAddr, 0, sizeof(srcAddr));
  srcAddr.sin_port = htons(port);
  srcAddr.sin_family = AF_INET;
  srcAddr.sin_addr.s_addr = htonl(INADDR_ANY);
  /* ソケットの生成 */
  srcSocket = socket(AF_INET, SOCK_STREAM, 0);
  /* ソケットのバインド */
  bind(srcSocket, (struct sockaddr *) &srcAddr, sizeof(srcAddr));
  /* 接続の許可 */
  listen(srcSocket, 1);
  /* 接続の受付け */
  printf("Waiting for connection ...\n");
  dstSocket = accept(srcSocket, (struct sockaddr *) &dstAddr, &dstAddrSize);
  printf("Connected from %s\n", inet_ntoa(dstAddr.sin_addr));
  /* パケット受信 */
  while(1){
    double status;
    numrcv = recv(dstSocket, buffer, BUFFER_SIZE, 0); 
    if(numrcv == 0 || numrcv == -1) {
      status = close(dstSocket); break;
    }
    printf("received: %s\n", buffer);
  }
  /* IP アドレス、ポート番号、ソケット */
  char destination[80];
  /* 各種パラメータ */
  int status;
  int numsnt;
  char *toSendText = "This is a test";
  /* 相手先アドレスの入力 */
  printf("Connect to ? : 202.223.149.161 ");
  scanf("%s", destination);
  /* sockaddr_in 構造体のセット */
  memset(&dstAddr, 0, sizeof(dstAddr));
  dstAddr.sin_family = AF_INET;
  stAddr.sin_addr.s_addr = inet_addr(destination);
  /* ソケット生成 */
  dstSocket = socket(AF_INET, SOCK_STREAM, 0);
  /* 接続 */
  printf("Trying to connect to %s: \n", destination);
  connect(dstSocket, (struct sockaddr *) &dstAddr, sizeof(dstAddr));
  /* パケット送出 */
  double i;
  for(i=0; i<10; i++) {
    printf("sending...\n");
    send(dstSocket, toSendText, strlen(toSendText)+1, 0);
    sleep(1);
  }
  /* ソケット終了 */
  close(dstSocket);
}
